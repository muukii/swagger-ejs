[ {
  "importPath" : "/APIs.Default",
  "appVersion" : "1.0.0",
  "package" : "/APIs",
  "imports" : [ {
    "import" : "/Models.Photos"
  }, {
    "import" : "/Models.Photo"
  } ],
  "generatorClass" : "class io.swagger.codegen.languages.SwiftCodegen",
  "modelPackage" : "/Models",
  "appName" : "Unsplash",
  "sortParamsByRequiredFlag" : true,
  "unwrapRequired" : false,
  "contextPath" : "",
  "templateDir" : "/Users/Muukii/Develop/Swift/Unsplash-Swift/templates",
  "classVarName" : "default",
  "hasImport" : true,
  "version" : "1.0.0",
  "basePathWithoutHost" : null,
  "responseAs" : [ ],
  "operations" : {
    "classname" : "DefaultAPI",
    "operation" : [ {
      "responseHeaders" : [ ],
      "hasConsumes" : false,
      "hasProduces" : false,
      "hasParams" : true,
      "hasOptionalParams" : true,
      "isListContainer" : true,
      "hasMore" : true,
      "isResponseBinary" : false,
      "hasReference" : true,
      "path" : "/photos",
      "operationId" : "photosGet",
      "returnType" : "[Photos]",
      "httpMethod" : "GET",
      "returnBaseType" : "Photos",
      "returnContainer" : "array",
      "notes" : "Get a single page from the list of all photos.",
      "baseName" : "Default",
      "allParams" : [ {
        "isQueryParam" : true,
        "hasMore" : true,
        "baseName" : "page",
        "paramName" : "page",
        "dataType" : "Int",
        "description" : "Page number to retrieve. (Optional, default: 1)",
        "jsonSchema" : "{\n  \"name\" : \"page\",\n  \"in\" : \"query\",\n  \"description\" : \"Page number to retrieve. (Optional, default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { }
      }, {
        "isQueryParam" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "per_page",
        "paramName" : "perPage",
        "dataType" : "Int",
        "description" : "Number of items per page. (Optional; default: 10)",
        "jsonSchema" : "{\n  \"name\" : \"per_page\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of items per page. (Optional; default: 10)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { }
      }, {
        "isQueryParam" : true,
        "secondaryParam" : true,
        "baseName" : "order_by",
        "paramName" : "orderBy",
        "dataType" : "Int",
        "description" : "How to sort the photos. Optional. (Valid values: latest, oldest, popular; default: latest)",
        "jsonSchema" : "{\n  \"name\" : \"order_by\",\n  \"in\" : \"query\",\n  \"description\" : \"How to sort the photos. Optional. (Valid values: latest, oldest, popular; default: latest)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { }
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ ],
      "queryParams" : [ {
        "isQueryParam" : true,
        "hasMore" : true,
        "baseName" : "page",
        "paramName" : "page",
        "dataType" : "Int",
        "description" : "Page number to retrieve. (Optional, default: 1)",
        "jsonSchema" : "{\n  \"name\" : \"page\",\n  \"in\" : \"query\",\n  \"description\" : \"Page number to retrieve. (Optional, default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { }
      }, {
        "isQueryParam" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "per_page",
        "paramName" : "perPage",
        "dataType" : "Int",
        "description" : "Number of items per page. (Optional; default: 10)",
        "jsonSchema" : "{\n  \"name\" : \"per_page\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of items per page. (Optional; default: 10)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { }
      }, {
        "isQueryParam" : true,
        "secondaryParam" : true,
        "baseName" : "order_by",
        "paramName" : "orderBy",
        "dataType" : "Int",
        "description" : "How to sort the photos. Optional. (Valid values: latest, oldest, popular; default: latest)",
        "jsonSchema" : "{\n  \"name\" : \"order_by\",\n  \"in\" : \"query\",\n  \"description\" : \"How to sort the photos. Optional. (Valid values: latest, oldest, popular; default: latest)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { }
      } ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "tags" : [ "Default" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "Success",
        "hasMore" : false,
        "dataType" : "[Photos]",
        "baseType" : "Photos",
        "containerType" : "array",
        "isDefault" : true,
        "simpleType" : false,
        "primitiveType" : false,
        "isMapContainer" : false,
        "isListContainer" : false,
        "isBinary" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Photos"
          }
        },
        "jsonSchema" : "{\n  \"description\" : \"Success\",\n  \"schema\" : {\n    \"type\" : \"array\",\n    \"items\" : {\n      \"$ref\" : \"#/definitions/Photos\"\n    }\n  }\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Photos" ],
      "examples" : [ {
        "contentType" : "application/json",
        "example" : "[ {\n  \"urls\" : {\n    \"small\" : \"aeiou\",\n    \"thumb\" : \"aeiou\",\n    \"raw\" : \"aeiou\",\n    \"regular\" : \"aeiou\",\n    \"full\" : \"aeiou\"\n  },\n  \"color\" : \"aeiou\",\n  \"width\" : \"\",\n  \"links\" : {\n    \"download\" : \"aeiou\",\n    \"self\" : \"aeiou\",\n    \"html\" : \"aeiou\"\n  },\n  \"id\" : \"aeiou\",\n  \"categories\" : [ {\n    \"photo_count\" : \"\",\n    \"links\" : {\n      \"self\" : \"aeiou\",\n      \"photos\" : \"aeiou\"\n    },\n    \"id\" : \"\",\n    \"title\" : \"aeiou\"\n  } ],\n  \"liked_by_user\" : true,\n  \"user\" : {\n    \"profile_image\" : {\n      \"small\" : \"aeiou\",\n      \"large\" : \"aeiou\",\n      \"medium\" : \"aeiou\"\n    },\n    \"name\" : \"aeiou\",\n    \"links\" : {\n      \"self\" : \"aeiou\",\n      \"html\" : \"aeiou\",\n      \"photos\" : \"aeiou\",\n      \"likes\" : \"aeiou\"\n    },\n    \"id\" : \"aeiou\",\n    \"username\" : \"aeiou\"\n  },\n  \"height\" : \"\",\n  \"likes\" : \"\"\n} ]"
      } ],
      "vendorExtensions" : { },
      "nickname" : "photosGet",
      "hasBodyParam" : false,
      "hasQueryParams" : true,
      "hasHeaderParams" : false,
      "hasPathParams" : false,
      "hasFormParams" : false
    }, {
      "responseHeaders" : [ ],
      "hasConsumes" : false,
      "hasProduces" : false,
      "hasParams" : true,
      "isListContainer" : true,
      "hasMore" : true,
      "isResponseBinary" : false,
      "hasReference" : true,
      "path" : "/photos/search",
      "operationId" : "photosSearchGet",
      "returnType" : "[Photos]",
      "httpMethod" : "GET",
      "returnBaseType" : "Photos",
      "returnContainer" : "array",
      "notes" : "Get a single page from a photo search. Optionally limit your search to a set of categories by supplying the category ID’s.",
      "baseName" : "Default",
      "allParams" : [ {
        "isQueryParam" : true,
        "hasMore" : true,
        "baseName" : "query",
        "paramName" : "query",
        "dataType" : "String",
        "description" : "Search terms.",
        "jsonSchema" : "{\n  \"name\" : \"query\",\n  \"in\" : \"query\",\n  \"description\" : \"Search terms.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "secondaryParam" : true,
        "baseName" : "category",
        "paramName" : "category",
        "dataType" : "String",
        "description" : "Category ID(‘s) to filter search. If multiple, comma-separated.",
        "jsonSchema" : "{\n  \"name\" : \"category\",\n  \"in\" : \"query\",\n  \"description\" : \"Category ID(‘s) to filter search. If multiple, comma-separated.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ ],
      "queryParams" : [ {
        "isQueryParam" : true,
        "hasMore" : true,
        "baseName" : "query",
        "paramName" : "query",
        "dataType" : "String",
        "description" : "Search terms.",
        "jsonSchema" : "{\n  \"name\" : \"query\",\n  \"in\" : \"query\",\n  \"description\" : \"Search terms.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "secondaryParam" : true,
        "baseName" : "category",
        "paramName" : "category",
        "dataType" : "String",
        "description" : "Category ID(‘s) to filter search. If multiple, comma-separated.",
        "jsonSchema" : "{\n  \"name\" : \"category\",\n  \"in\" : \"query\",\n  \"description\" : \"Category ID(‘s) to filter search. If multiple, comma-separated.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      } ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "tags" : [ "Default" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "Success",
        "hasMore" : false,
        "dataType" : "[Photos]",
        "baseType" : "Photos",
        "containerType" : "array",
        "isDefault" : true,
        "simpleType" : false,
        "primitiveType" : false,
        "isMapContainer" : false,
        "isListContainer" : false,
        "isBinary" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Photos"
          }
        },
        "jsonSchema" : "{\n  \"description\" : \"Success\",\n  \"schema\" : {\n    \"type\" : \"array\",\n    \"items\" : {\n      \"$ref\" : \"#/definitions/Photos\"\n    }\n  }\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Photos" ],
      "examples" : [ {
        "contentType" : "application/json",
        "example" : "[ {\n  \"urls\" : {\n    \"small\" : \"aeiou\",\n    \"thumb\" : \"aeiou\",\n    \"raw\" : \"aeiou\",\n    \"regular\" : \"aeiou\",\n    \"full\" : \"aeiou\"\n  },\n  \"color\" : \"aeiou\",\n  \"width\" : \"\",\n  \"links\" : {\n    \"download\" : \"aeiou\",\n    \"self\" : \"aeiou\",\n    \"html\" : \"aeiou\"\n  },\n  \"id\" : \"aeiou\",\n  \"categories\" : [ {\n    \"photo_count\" : \"\",\n    \"links\" : {\n      \"self\" : \"aeiou\",\n      \"photos\" : \"aeiou\"\n    },\n    \"id\" : \"\",\n    \"title\" : \"aeiou\"\n  } ],\n  \"liked_by_user\" : true,\n  \"user\" : {\n    \"profile_image\" : {\n      \"small\" : \"aeiou\",\n      \"large\" : \"aeiou\",\n      \"medium\" : \"aeiou\"\n    },\n    \"name\" : \"aeiou\",\n    \"links\" : {\n      \"self\" : \"aeiou\",\n      \"html\" : \"aeiou\",\n      \"photos\" : \"aeiou\",\n      \"likes\" : \"aeiou\"\n    },\n    \"id\" : \"aeiou\",\n    \"username\" : \"aeiou\"\n  },\n  \"height\" : \"\",\n  \"likes\" : \"\"\n} ]"
      } ],
      "vendorExtensions" : { },
      "nickname" : "photosSearchGet",
      "hasBodyParam" : false,
      "hasQueryParams" : true,
      "hasHeaderParams" : false,
      "hasPathParams" : false,
      "hasFormParams" : false
    }, {
      "responseHeaders" : [ ],
      "hasConsumes" : false,
      "hasProduces" : false,
      "hasParams" : true,
      "returnSimpleType" : true,
      "isResponseBinary" : false,
      "hasReference" : true,
      "path" : "/photos/{id}",
      "operationId" : "photosIdGet",
      "returnType" : "Photo",
      "httpMethod" : "GET",
      "returnBaseType" : "Photo",
      "notes" : "Retrieve a single photo.",
      "baseName" : "Default",
      "allParams" : [ {
        "isPathParam" : true,
        "hasMore" : true,
        "baseName" : "id",
        "paramName" : "id",
        "dataType" : "String",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"description\" : \"\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "w",
        "paramName" : "w",
        "dataType" : "Int",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"w\",\n  \"in\" : \"query\",\n  \"description\" : \"\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "h",
        "paramName" : "h",
        "dataType" : "Int",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"h\",\n  \"in\" : \"query\",\n  \"description\" : \"\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "secondaryParam" : true,
        "baseName" : "rect",
        "paramName" : "rect",
        "dataType" : "String",
        "description" : "4 comma-separated integers representing x, y, width, height of the cropped rectangle.",
        "jsonSchema" : "{\n  \"name\" : \"rect\",\n  \"in\" : \"query\",\n  \"description\" : \"4 comma-separated integers representing x, y, width, height of the cropped rectangle.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "id",
        "paramName" : "id",
        "dataType" : "String",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"description\" : \"\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      } ],
      "queryParams" : [ {
        "isQueryParam" : true,
        "hasMore" : true,
        "baseName" : "w",
        "paramName" : "w",
        "dataType" : "Int",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"w\",\n  \"in\" : \"query\",\n  \"description\" : \"\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "h",
        "paramName" : "h",
        "dataType" : "Int",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"h\",\n  \"in\" : \"query\",\n  \"description\" : \"\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      }, {
        "isQueryParam" : true,
        "secondaryParam" : true,
        "baseName" : "rect",
        "paramName" : "rect",
        "dataType" : "String",
        "description" : "4 comma-separated integers representing x, y, width, height of the cropped rectangle.",
        "jsonSchema" : "{\n  \"name\" : \"rect\",\n  \"in\" : \"query\",\n  \"description\" : \"4 comma-separated integers representing x, y, width, height of the cropped rectangle.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "isEnum" : false,
        "vendorExtensions" : { },
        "required" : true
      } ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "tags" : [ "Default" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "Success",
        "hasMore" : false,
        "dataType" : "Photo",
        "baseType" : "Photo",
        "isDefault" : true,
        "simpleType" : true,
        "primitiveType" : false,
        "isBinary" : false,
        "schema" : {
          "$ref" : "#/definitions/Photo"
        },
        "jsonSchema" : "{\n  \"description\" : \"Success\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Photo\"\n  }\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Photo" ],
      "examples" : [ {
        "contentType" : "application/json",
        "example" : "{\n  \"urls\" : {\n    \"small\" : \"aeiou\",\n    \"thumb\" : \"aeiou\",\n    \"raw\" : \"aeiou\",\n    \"regular\" : \"aeiou\",\n    \"full\" : \"aeiou\"\n  },\n  \"color\" : \"aeiou\",\n  \"width\" : \"\",\n  \"links\" : {\n    \"download\" : \"aeiou\",\n    \"self\" : \"aeiou\",\n    \"html\" : \"aeiou\"\n  },\n  \"location\" : {\n    \"country\" : \"aeiou\",\n    \"city\" : \"aeiou\"\n  },\n  \"id\" : \"aeiou\",\n  \"categories\" : [ {\n    \"photo_count\" : \"\",\n    \"links\" : {\n      \"self\" : \"aeiou\",\n      \"photos\" : \"aeiou\"\n    },\n    \"id\" : \"\",\n    \"title\" : \"aeiou\"\n  } ],\n  \"liked_by_user\" : true,\n  \"user\" : {\n    \"profile_image\" : {\n      \"small\" : \"aeiou\",\n      \"large\" : \"aeiou\",\n      \"medium\" : \"aeiou\"\n    },\n    \"name\" : \"aeiou\",\n    \"links\" : {\n      \"self\" : \"aeiou\",\n      \"html\" : \"aeiou\",\n      \"photos\" : \"aeiou\",\n      \"likes\" : \"aeiou\"\n    },\n    \"id\" : \"aeiou\",\n    \"username\" : \"aeiou\"\n  },\n  \"height\" : \"\",\n  \"likes\" : \"\",\n  \"exif\" : {\n    \"exposure_time\" : 1.3579000000000001069366817318950779736042022705078125,\n    \"aperture\" : 1.3579000000000001069366817318950779736042022705078125,\n    \"focal_length\" : \"\",\n    \"iso\" : \"\",\n    \"model\" : \"aeiou\",\n    \"make\" : \"aeiou\"\n  }\n}"
      } ],
      "vendorExtensions" : { },
      "nickname" : "photosIdGet",
      "hasBodyParam" : false,
      "hasQueryParams" : true,
      "hasHeaderParams" : false,
      "hasPathParams" : true,
      "hasFormParams" : false
    } ],
    "pathPrefix" : "default"
  },
  "basePath" : "https://api.unsplash.com",
  "classname" : "DefaultAPI",
  "generatedDate" : "2016-04-09T19:03:12.545+09:00",
  "projectName" : "SwaggerClient",
  "baseName" : "Default"
} ]
